# You can run `pre-commit run --all-files` or `make check`
repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.0.1
    hooks:
      - id: check-ast
      - id: check-byte-order-marker
      - id: check-case-conflict
      - id: check-docstring-first
      - id: check-executables-have-shebangs
      - id: check-json
      - id: check-yaml
      - id: debug-statements
      - id: end-of-file-fixer
      - id: trailing-whitespace
      - id: mixed-line-ending
      - id: check-added-large-files
        args: [--maxkb=30000]
  - repo: https://github.com/psf/black
    rev: 21.7b0
    hooks:
    -   id: black
        args: [--config=pyproject.toml]
  - repo: https://github.com/pycqa/isort
    rev: 5.9.3
    hooks:
      - id: isort
        args: [--filter-files]
        files: \.py$
        name: isort (python)
      - id: isort
        name: isort (cython)
        types: [cython]
      - id: isort
        name: isort (pyi)
        types: [pyi]
  -   repo: local
      hooks:
        - id: requirements
          name: requirements
          entry: bash -c 'poetry export --without-hashes -f requirements.txt > requirements.txt; poetry export --dev --without-hashes -f requirements.txt >> requirements.txt'
          language: system
          pass_filenames: false
          stages: [commit]
  -   repo: local
      hooks:
        - id: secrets
          name: secrets
          entry: bash -c './update_secrets.sh'
          language: system
          pass_filenames: false
          stages: [commit]
  -   repo: local
      hooks:
        - id: env
          name: env
          entry: bash -c './update_env.sh'
          language: system
          pass_filenames: false
          stages: [commit]
